beta1=1
beta2=.5
beta3=0
beta4=.5
beta5=1
t=seq(0,20)
t0=12
contr.bef <- beta2*t
contr.aft=beta2*t+beta3*(t-t0)
exp.bef<-beta2*t+beta4*t
exp.aft=beta2*t+beta3*(t-t0)+beta4*t+beta5*(t-t0)
exp.aft
plot(t,exp.bef)
plot(t,exp.aft)
plot(exp.bef,type="l")
lines(t,exp.aft,col="red")
plot(contr.aft,type="l")
lines(t,exp.aft,col="red")
plot(contr.aft,type="l",xlim=c(t0,20))
lines(t,exp.aft,col="red",xlim=c(t0,20))
plot(contr.aft,type="l",xlim=c(t0,20),ylim=c(0,20))
lines(t,exp.aft,col="red",xlim=c(t0,20))
exp.aft
contr.aft
34*3
logit(0)
exp(5)
exp(8)
n = 100
n.pred = 10
y = arima.sim(n=n, model=list(ar=0.9))
N = n + n.pred
yy = c(y, rep(NA, n.pred))
i = 1:N
formula = yy ~ f(i, model="ar1")
r = inla(formula, data = data.frame(i,yy),
control.family = list(initial = 10, fixed=TRUE)) ## no observational noise
library(INLA)
n = 100
n.pred = 10
y = arima.sim(n=n, model=list(ar=0.9))
N = n + n.pred
yy = c(y, rep(NA, n.pred))
i = 1:N
formula = yy ~ f(i, model="ar1")
r = inla(formula, data = data.frame(i,yy),
control.family = list(initial = 10, fixed=TRUE)) ## no observational noise
r$summary.fitted.values
n = 100
n.pred = 10
y = arima.sim(n=n, model=list(ar=0.9))
N = n + n.pred
yy = c(y, rep(NA, n.pred))
i = 1:N
formula = yy ~ f(i, model="ar1")
r = inla(formula, data = data.frame(i,yy),
control.family = list(initial = 10, fixed=TRUE), control.predictor = list(compute=TRUE)) ## no observational noise
r$summary.fitted.values
names(r)
cbind(r$summary.fitted.values[,2],r$summary.linear.predictor[,2])
plot(y[1:100],r$summary.fitted.values[1:100,2])
link=rep(1,110)
n = 100
n.pred = 10
y = arima.sim(n=n, model=list(ar=0.9))
N = n + n.pred
yy = c(y, rep(NA, n.pred))
i = 1:N
formula = yy ~ f(i, model="ar1")
r = inla(formula, data = data.frame(i,yy),
control.family = list(initial = 10, fixed=TRUE), control.predictor = list(compute=TRUE,link=link)) ## no observational noise
cbind(r$summary.fitted.values[,2],r$summary.linear.predictor[,2])
link
r$summary.fitted.values
r$summary.linear.predictor
cbind(r$summary.fitted.values[,1],r$summary.linear.predictor[,1])
plot(rnorm(1000))
Sys.getenv("PATH")
system('g++ -v')
system('where make')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
616*12
require(INLA)
setwd("F:/Dropbox/Books/INLABook/Datasets/LBW in Georgia")
data <- read.csv(paste("LBW in Georgia/data.final.csv",sep=""))
getwd()
data <- read.csv("LBW in Georgia/data.final.csv")
data <- read.csv("data.final.csv")
georgia <- readShapePoly("co13_d00.shp"))
georgia <- readShapePoly("co13_d00.shp")
require(maptools)
georgia <- readShapePoly("co13_d00.shp")
formula.par <- y ~ 1 + f(county,model="bym",graph=Ohio.adj, constr=TRUE) + f(county1,year,model="iid", constr=TRUE) + year
names <- georgia$NAME
georgia <- georgia[-c(99,100,105,137),]
data.georgia <- attr(georgia, "data")
low.vector <- as.vector(as.matrix(data[,2:12]))#by column
E.vector <- as.vector(as.matrix(data[,13:23]))#by column
year <- numeric(0)
for(i in 1:11){
year<- append(year,rep(i,dim(data)[1]))
}
county <- as.factor(rep(data[,1],11))
data <- data.frame(y= low.vector, E= E.vector, ID.area=as.numeric(county), ID.area1=as.numeric(county), year=year,
ID.year = year, ID.year1=year, ID.area.year = seq(1,length(county)))
Georgia.adj <- "LBW in Georgia/Georgia.graph"
Temp.adj <- "LBW in Georgia/Temp.graph"
formula.ST1 <- y ~  f(ID.area,model="bym",graph=Georgia.adj) +f(ID.year,model="rw2") + f(ID.year1,model="iid")
lcs <- inla.make.lincombs(ID.year = diag(11),  ID.year1 = diag(11))
model.ST1 <- inla(formula.ST1,family="poisson",data=data,E=E,
control.predictor=list(compute=TRUE),
lincomb=lcs)
Georgia.adj <- "Georgia.graph"
Temp.adj <- "Temp.graph"
formula.ST1 <- y ~  f(ID.area,model="bym",graph=Georgia.adj) +f(ID.year,model="rw2") + f(ID.year1,model="iid")
lcs <- inla.make.lincombs(ID.year = diag(11),  ID.year1 = diag(11))
model.ST1 <- inla(formula.ST1,family="poisson",data=data,E=E,
control.predictor=list(compute=TRUE),
lincomb=lcs)
rrr=inla.posterior.sample(model.ST1,10)
rrr=inla.posterior.sample(10,model.ST1)
model.ST1 <- inla(formula.ST1,family="poisson",data=data,E=E,
control.predictor=list(compute=TRUE),control.compute=list(config=TRUE)
lincomb=lcs)
model.ST1 <- inla(formula.ST1,family="poisson",data=data,E=E,
control.predictor=list(compute=TRUE),control.compute=list(config=TRUE),
lincomb=lcs)
rrr=inla.posterior.sample(10,model.ST1)
names(rrr)
names(rrr[1])
names(rrr[[1]])
sim(rrr[[1]]$latent)
dim(rrr[[1]]$latent)
dim(data)
1749/11
159*11
159*11+11+11+11+1
159*11+11+11+11+1+159
model.ST1$misc$configs$contents
